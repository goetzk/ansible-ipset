*filter
-F
:INPUT {{ ipset_iptables_default_input_policy|upper }}
:FORWARD {{ ipset_iptables_default_forward_policy|upper }}
:OUTPUT {{ ipset_iptables_default_output_policy|upper }}
{% if ipset_iptables_default_input_policy|upper != "ACCEPT" %}
-A INPUT -i lo -j ACCEPT
-A INPUT {{ ipset_iptables_connection_state_mode }} related,established -j ACCEPT
{% endif %}
{% if ipset_iptables_default_output_policy|upper != "ACCEPT" %}
-A OUTPUT -o lo -j ACCEPT
-A OUTPUT {{ ipset_iptables_connection_state_mode }} established -j ACCEPT
{% endif %}
{% if ipset_iptables_custom_rules is defined %}
{%   for _ipset_iptables_custom_rule in ipset_iptables_custom_rules %}
-A {{ _ipset_iptables_custom_rule['chain'] }} -p {{ _ipset_iptables_custom_rule['protocol'] }}
{%-    if _ipset_iptables_custom_rule['dports'] != [] %} -m multiport --dports {{ _ipset_iptables_custom_rule['dports']|join(',') }}{% endif %}
{%-    if _ipset_iptables_custom_rule['sports'] != [] %} -m multiport --sports {{ _ipset_iptables_custom_rule['sports']|join(',') }}{% endif %}
{%-    if _ipset_iptables_custom_rule['states'] != [] %} {{ ipset_iptables_connection_state_mode }} {{ _ipset_iptables_custom_rule['states']|join(',') }}{% endif %}
 -j {{ _ipset_iptables_custom_rule['policy'] }}
{%   endfor %}
{% endif %}
{% if ipset_rules is defined %}
{%   for _ipset_rule in ipset_rules %}
{%     if _ipset_rule['state'] == "present" %}
-A {{ _ipset_rule['chain']|upper }}
{%-      if _ipset_rule['protocol'] is defined %} -p {{ _ipset_rule['protocol'] }}{% endif %}
{%-      if _ipset_rule['sports'] is defined %} -m multiport --sports {{ _ipset_rule['sports']|join(',') }}{% endif %}
{%-      if _ipset_rule['dports'] is defined %} -m multiport --dports {{ _ipset_rule['dports']|join(',') }}{% endif %}
{%-      if _ipset_rule['chain']|upper == "INPUT" %}
{%-        if _ipset_rule['states'] != [] %} {{ ipset_iptables_connection_state_mode }} {{ _ipset_rule['states']|join(',') }}{% endif %}
 -m set --match-set {{ _ipset_rule['name'] }} src -j {{ _ipset_rule['policy']|upper }}
{%       elif _ipset_rule['chain']|upper == "FORWARD" %}
{%-        if _ipset_rule['states'] != [] %} {{ ipset_iptables_connection_state_mode }} {{ _ipset_rule['states']|join(',') }}{% endif %}
 -m set --match-set {{ _ipset_rule['name'] }} src -j {{ _ipset_rule['policy']|upper }}
{%-        if _ipset_rule['states'] != [] %} {{ ipset_iptables_connection_state_mode }} {{ _ipset_rule['states']|join(',') }}{% endif %}
 -m set --match-set {{ _ipset_rule['name'] }} dst -j {{ _ipset_rule['policy']|upper }}
{%       elif _ipset_rule['chain']|upper == "OUTPUT" %}
{%-        if _ipset_rule['states'] != [] %} {{ ipset_iptables_connection_state_mode }} {{ _ipset_rule['states']|join(',') }}{% endif %}
 -m set --match-set {{ _ipset_rule['name'] }} dst -j {{ _ipset_rule['policy']|upper }}
{%       endif %}
{%     endif %}
{%   endfor %}
{% endif %}
{% if ipset_enable_dshield_block_list and ipset_iptables_dshield_chains is defined %}
{%   for _chain in ipset_iptables_dshield_chains %}
{%     if _chain|upper == "INPUT" %}
-A {{ _chain|upper }} -m set --match-set dshield_block_list src -j DROP
{%     elif _chain|upper == "FORWARD" %}
-A {{ _chain|upper }} -m set --match-set dshield_block_list src -j DROP
-A {{ _chain|upper }} -m set --match-set dshield_block_list dst -j DROP
{%     elif _chain|upper == "OUTPUT" %}
-A {{ _chain|upper }} -m set --match-set dshield_block_list dst -j DROP
{%     endif %}
{%   endfor %}
{% endif %}
{% if ipset_enable_firehol_block_list and ipset_iptables_firehol_chains is defined %}
{%   for _chain in ipset_iptables_firehol_chains %}
{%     if _chain|upper == "INPUT" %}
-A {{ _chain|upper }} -m set --match-set firehol_block_list src -j DROP
{%     elif _chain|upper == "FORWARD" %}
-A {{ _chain|upper }} -m set --match-set firehol_block_list src -j DROP
-A {{ _chain|upper }} -m set --match-set firehol_block_list dst -j DROP
{%     elif _chain|upper == "OUTPUT" %}
-A {{ _chain|upper }} -m set --match-set firehol_block_list dst -j DROP
{%     endif %}
{%   endfor %}
{% endif %}
{% if ipset_enable_spamhaus_block_list and ipset_iptables_spamhaus_chains is defined %}
{%   for _chain in ipset_iptables_spamhaus_chains %}
{%     if _chain|upper == "INPUT" %}
-A {{ _chain|upper }} -m set --match-set spamhaus_drop_block_list src -j DROP
-A {{ _chain|upper }} -m set --match-set spamhaus_edrop_block_list src -j DROP
{%     elif _chain|upper == "FORWARD" %}
-A {{ _chain|upper }} -m set --match-set spamhaus_drop_block_list src -j DROP
-A {{ _chain|upper }} -m set --match-set spamhaus_drop_block_list dst -j DROP
-A {{ _chain|upper }} -m set --match-set spamhaus_edrop_block_list src -j DROP
-A {{ _chain|upper }} -m set --match-set spamhaus_edrop_block_list dst -j DROP
{%     elif _chain|upper == "OUTPUT" %}
-A {{ _chain|upper }} -m set --match-set spamhaus_drop_block_list dst -j DROP
-A {{ _chain|upper }} -m set --match-set spamhaus_edrop_block_list dst -j DROP
{%     endif %}
{%   endfor %}
{% endif %}
COMMIT
